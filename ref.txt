Window window;

    public boolean active = false;
    BorderPane root = new BorderPane();
    BorderPane addObjectPane = new BorderPane();

    VBox addObjMenuBox = new VBox();

    boolean addObjActive = false;

    List<String> objectNames = new ArrayList<String>();


    @Override
    public void create() {

        root.setPadding(new Insets(24));
        root.setBackgroundLegacy(null);

        Label menuLabel = new Label("objects menu");
        menuLabel.setFontSize(24);
        menuLabel.setTextFill(Color.GREEN);
        menuLabel.setAlignment(Pos.TOP_RIGHT);

        Button addButton = new Button("add object");

        addButton.setOnAction((event) -> {
            addObjActive = !addObjActive;
        });


        {
            VBox menuBox = new VBox();
            menuBox.setAlignment(Pos.TOP_LEFT);
            menuBox.setPadding(new Insets(8,8,8,8));
            menuBox.setBackgroundLegacy(Color.BLACK);

            menuBox.getChildren().add(menuLabel);
            menuBox.getChildren().add(addButton);

            root.setAlignment(Pos.TOP_RIGHT);
            root.setCenter(menuBox);
        }

        window = WindowManager.generateWindow(DisplayManager.win);
        /* this line will error if you aren't using
        this specific version of nanovg for some reason */
        window.setWindowAutoClear(false);

        window.setScene(new lwjgui.scene.Scene(root, Main.width, Main.height));
        window.show();

        createAddObjectsMenu();

    }

    public void createAddObjectsMenu() {
        root.setPadding(new Insets(24));
        root.setBackgroundLegacy(null);

        Label menuLabel = new Label("add object");
        menuLabel.setFontSize(24);
        menuLabel.setTextFill(Color.GREEN);
        menuLabel.setAlignment(Pos.TOP_RIGHT);

        TextField name = new TextField();
        name.setPrompt("name");

        TextField objPath = new TextField();
        objPath.setPrompt(".obj path");

        TextField texPath = new TextField();
        texPath.setPrompt("texure path");

        TextField x = new TextField();
        x.setPrompt("x");
        x.setMaxSize(50, 50);

        TextField y = new TextField();
        y.setPrompt("y");
        y.setMaxSize(50, 50);

        TextField z = new TextField();
        z.setPrompt("z");
        z.setMaxSize(50, 50);

        TextField scale = new TextField();
        scale.setPrompt("scale");
        scale.setMaxSize(50, 50);

        Button addButton = new Button("add object");
        addButton.setOnAction((event) -> {
            try {
                SceneManager.addObject(ObjectGetter.getModel(objPath.getText(), texPath.getText(), Float.parseFloat(x.getText()), Float.parseFloat(y.getText()), Float.parseFloat(z.getText()), Float.parseFloat(scale.getText()), name.getText()));
            } catch (Exception e) {
                e.printStackTrace();
            }
        });

        addObjMenuBox.setAlignment(Pos.TOP_LEFT);
        addObjMenuBox.setPadding(new Insets(8,8,8,8));
        addObjMenuBox.setBackgroundLegacy(Color.BLACK);

        addObjMenuBox.getChildren().add(addButton);
        addObjMenuBox.getChildren().add(name);
        addObjMenuBox.getChildren().add(objPath);
        addObjMenuBox.getChildren().add(texPath);
        addObjMenuBox.getChildren().add(x);
        addObjMenuBox.getChildren().add(y);
        addObjMenuBox.getChildren().add(z);
        addObjMenuBox.getChildren().add(scale);
        addObjMenuBox.setVisible(false);
        root.setAlignment(Pos.BOTTOM_RIGHT);
        root.setRight(addObjMenuBox);

    }

    @Override
    public void update() {
        if(addObjActive) addObjMenuBox.setVisible(true);
        else addObjMenuBox.setVisible(false);
        if(active) window.render();
    }